/****** Script for SelectTopNRows command from SSMS  ******/
--SELECT TOP (1000) [UniqueID ]
--      ,[ParcelID]
--      ,[LandUse]
--      ,[PropertyAddress]
--      ,[SaleDate]
--      ,[SalePrice]
--      ,[LegalReference]
--      ,[SoldAsVacant]
--      ,[OwnerName]
--      ,[OwnerAddress]
--      ,[Acreage]
--      ,[TaxDistrict]
--      ,[LandValue]
--      ,[BuildingValue]
--      ,[TotalValue]
--      ,[YearBuilt]
--      ,[Bedrooms]
--      ,[FullBath]
--      ,[HalfBath]
--  FROM [PortfolioProject].[dbo].[NASHVILLEHOUSING] 


--SELECT * 
--FROM PortfolioProject.DBO.NASHVILLEHOUSING

--SELECT SALEDATECONVERTED, CONVERT(DATE,SALEDATE)
--FROM PortfolioProject.DBO.NASHVILLEHOUSING

--UPDATE NASHVILLEHOUSING
--SET SALEDATE = CONVERT(DATE,SALEDATE)

--ALTER TABLE NASHVILLEHOUSING
--ADD SALEDATECONVERTED DATE; 

--UPDATE NASHVILLEHOUSING
--SET SALEDATECONVERTED = CONVERT(DATE,SALEDATE)


--POPULATE PROPERTY ADDRESS

--SELECT *
--FROM PortfolioProject.DBO.NASHVILLEHOUSING
----WHERE PROPERTYADDRESS IS NULL
--ORDER BY PARCELID


--SELECT A.PARCELID, A.PROPERTYADDRESS, B.PARCELID, B.PROPERTYADDRESS, ISNULL(A.PROPERTYADDRESS,B.PROPERTYADDRESS)
--FROM PortfolioProject.DBO.NASHVILLEHOUSING A
--JOIN PortfolioProject.DBO.NASHVILLEHOUSING B
--ON A.PARCELID = B.PARCELID
--AND A.[UNIQUEID] <> B.[UNIQUEID]
--WHERE A.PROPERTYADDRESS IS NULL



--UPDATE A
--SET PROPERTYADDRESS = ISNULL(A.PROPERTYADDRESS,B.PROPERTYADDRESS)
--FROM PortfolioProject.DBO.NASHVILLEHOUSING A
--JOIN PortfolioProject.DBO.NASHVILLEHOUSING B
--ON A.PARCELID = B.PARCELID
--AND A.[UNIQUEID] <> B.[UNIQUEID]
--WHERE A.PROPERTYADDRESS IS NULL


--BREAKING OUT ADDRESS INTO INDIVIDUAL COLUMNS(ADDRESS, CITY, STATE)

--SELECT PROPERTYADDRESS
--FROM PortfolioProject.DBO.NASHVILLEHOUSING
--WHERE PROPERTYADDRESS IS NULL
--ORDER BY PARCELID

--SELECT
--SUBSTRING(PROPERTYADDRESS,1,CHARINDEX( ',', PROPERTYADDRESS)-1) AS ADDRESS ,
--SUBSTRING(PROPERTYADDRESS,CHARINDEX( ',', PROPERTYADDRESS)+1, LEN(PROPERTYADDRESS)) AS ADDRESS
--FROM PortfolioProject.DBO.NASHVILLEHOUSING 


--ALTER TABLE NASHVILLEHOUSING
--ADD PROPERTYSPLITADDRESS nvarchar(255) ;

--UPDATE NASHVILLEHOUSING
--SET PROPERTYSPLITADDRESS = SUBSTRING(PROPERTYADDRESS,1,CHARINDEX( ',', PROPERTYADDRESS)-1)

--ALTER TABLE NASHVILLEHOUSING
--ADD PROPERTYSPLITCITY nvarchar(255) ;

--UPDATE NASHVILLEHOUSING
--SET PROPERTYSPLITCITY = SUBSTRING(PROPERTYADDRESS,CHARINDEX( ',', PROPERTYADDRESS)+1, LEN(PROPERTYADDRESS)) 


--SELECT  OWNERADDRESS
--FROM PortfolioProject.DBO.NASHVILLEHOUSING


 --SELECT
 --PARSENAME (REPLACE(OWNERADDRESS, ',', '.'),3),
 --PARSENAME (REPLACE(OWNERADDRESS, ',', '.'),2),
 --PARSENAME (REPLACE(OWNERADDRESS, ',', '.'),1)
 --FROM PortfolioProject.DBO.NASHVILLEHOUSING


-- ALTER TABLE NASHVILLEHOUSING
--ADD OWNERSPLITADDRESS nvarchar(255) ;

--UPDATE NASHVILLEHOUSING
--SET OWNERSPLITADDRESS = PARSENAME (REPLACE(OWNERADDRESS, ',', '.'),3)


--ALTER TABLE NASHVILLEHOUSING
--ADD OWNERSPLITCITY nvarchar(255) ;

--UPDATE NASHVILLEHOUSING
--SET OWNERSPLITCITY = PARSENAME (REPLACE(OWNERADDRESS, ',', '.'),2)


--ALTER TABLE NASHVILLEHOUSING
--ADD OWNERSPLITSTATE nvarchar(255) ;

--UPDATE NASHVILLEHOUSING
--SET OWNERSPLITSTATE = PARSENAME (REPLACE(OWNERADDRESS, ',', '.'),1)



--SELECT *
--FROM PortfolioProject.DBO.NASHVILLEHOUSING

--CHANGE Y AND N TO YES AND NO I "SOLD AS VACANT" FIELD

--SELECT DISTINCT(SOLDASVACANT), COUNT(SOLDASVACANT)
--FROM PortfolioProject.DBO.NASHVILLEHOUSING
--GROUP BY SOLDASVACANT
--ORDER BY 2

--SELECT SOLDASVACANT
--,CASE WHEN SOLDASVACANT = 'Y' THEN 'YES'
--WHEN SOLDASVACANT = 'N' THEN 'NO'
--ELSE SOLDASVACANT
--END
--FROM PortfolioProject.DBO.NASHVILLEHOUSING


--UPDATE NASHVILLEHOUSING
--SET SOLDASVACANT = CASE WHEN SOLDASVACANT = 'Y' THEN 'YES'
--WHEN SOLDASVACANT = 'N' THEN 'NO'
--ELSE SOLDASVACANT
--END


--REMOVING DUPLICATES

--WITH ROWNUMCTE AS (
--SELECT *,
--ROW_NUMBER() OVER (
--PARTITION BY PARCELID,
--PROPERTYADDRESS,
--SALEPRICE,
--SALEDATE,
--LEGALREFERENCE
--ORDER BY 
--UNIQUEID
-- )ROW_NUM
--FROM PortfolioProject.DBO.NASHVILLEHOUSING
--)
--SELECT *
--FROM ROWNUMCTE
--WHERE ROW_NUM > 1
----ORDER BY PROPERTYADDRESS

--SELECT *
--FROM PortfolioProject.DBO.NASHVILLEHOUSING




--DELETE UNUSED COLUMNS

--SELECT *
--FROM PortfolioProject.DBO.NASHVILLEHOUSING

--ALTER TABLE PortfolioProject.DBO.NASHVILLEHOUSING
--DROP COLUMN OWNERADDRESS, TAXDISTRICT, PROPERTYADDRESS

--ALTER TABLE PortfolioProject.DBO.NASHVILLEHOUSING
--DROP COLUMN SALEDATE

